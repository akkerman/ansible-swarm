---
# tasks file for akkerman.swarm
#

- name: get service facts
  tags: swarm
  service_facts:

- name: check docker is installed
  tags: swarm
  fail:
    msg: Please install and start docker first
  when: ansible_facts.services["docker.service"] is not defined


- name: check swarm mode status
  tags: swarm
  command: docker info
  register: 'docker_info'
  changed_when: false
  check_mode: no

- name: set swarm facts
  tags: swarm
  set_fact:
    docker_swarm_inactive: "{{ 'Swarm: inactive' in docker_info.stdout }}"
    docker_swarm_leader_ip: "{{ vars['ansible_' + docker_swarm_leader_interface]['ipv4']['address'] }}"

# docker_swarm_manager_leader
- name: initialize swarm on leader
  tags: swarm
  command: docker swarm init --advertise-addr {{ docker_swarm_leader_ip }}
  when:
    - docker_swarm_inactive
    - inventory_hostname == docker_swarm_leader


- name: capture manager join token
  tags: swarm
  command: docker swarm join-token -q manager
  changed_when: false
  register: 'docker_swarm_join_token_manager'
  when: inventory_hostname == docker_swarm_leader

- name: capture worker join token
  tags: swarm
  command: docker swarm join-token -q worker
  changed_when: false
  register: 'docker_swarm_join_token_worker'
  when: inventory_hostname == docker_swarm_leader


# docker_swarm_managers
- name: copy swarm token from leader to current manager
  tags: swarm
  set_fact:
    docker_swarm_worker_token: "{{ hostvars[docker_swarm_leader]['docker_swarm_join_token_manager'] }}"
  changed_when: false
  when:
    - docker_swarm_inactive
    - inventory_hostname != docker_swarm_leader
    - inventory_hostname in docker_swarm_managers

- name: join manager to cluster
  tags: swarm
  command: >
    docker swarm join
    --token {{ docker_swarm_join_token_manager.stdout }}
    {{ docker_swarm_leader_ip }}
  when:
    - docker_swarm_inactive
    - inventory_hostname != docker_swarm_leader
    - inventory_hostname in docker_swarm_managers

# docker_swarm_workers
- name: copy swarm token from leader to current worker
  tags: swarm
  set_fact:
    docker_swarm_worker_token: "{{ hostvars[docker_swarm_leader]['docker_swarm_join_token_worker'] }}"
  changed_when: false
  when:
    - docker_swarm_inactive
    - inventory_hostname != docker_swarm_leader
    - inventory_hostname in docker_swarm_workers

- name: join worker to cluster
  tags: swarm
  command: >
    docker swarm join
    --token {{ docker_swarm_join_token_worker.stdout }}
    {{ docker_swarm_leader_ip }}
  when:
    - docker_swarm_inactive
    - inventory_hostname != docker_swarm_leader
    - inventory_hostname in docker_swarm_workers
